apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2020-09-15T14:48:42Z"
  generation: 1
  managedFields:
  - apiVersion: apiextensions.k8s.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:conditions: {}
    manager: kube-apiserver
    operation: Update
    time: "2020-09-15T14:48:42Z"
  - apiVersion: apiextensions.k8s.io/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:conversion:
          .: {}
          f:strategy: {}
        f:group: {}
        f:names:
          f:kind: {}
          f:listKind: {}
          f:plural: {}
          f:singular: {}
        f:preserveUnknownFields: {}
        f:scope: {}
        f:validation:
          .: {}
          f:openAPIV3Schema:
            .: {}
            f:properties:
              .: {}
              f:spec:
                .: {}
                f:properties:
                  .: {}
                  f:clusterServiceInfo:
                    .: {}
                    f:properties:
                      .: {}
                      f:clusterDomain:
                        .: {}
                        f:minimum: {}
                        f:type: {}
                      f:clusterID:
                        .: {}
                        f:minimum: {}
                        f:type: {}
                      f:port:
                        .: {}
                        f:minimum: {}
                        f:type: {}
                      f:serviceIP:
                        .: {}
                        f:minimum: {}
                        f:type: {}
        f:version: {}
        f:versions: {}
      f:status:
        f:storedVersions: {}
    manager: subctl
    operation: Update
    time: "2020-09-15T14:48:42Z"
  name: multiclusterservices.lighthouse.submariner.io
  resourceVersion: "54697"
  selfLink: /apis/apiextensions.k8s.io/v1/customresourcedefinitions/multiclusterservices.lighthouse.submariner.io
  uid: f00d6825-f268-4266-8446-3a3cb1358773
spec:
  conversion:
    strategy: None
  group: lighthouse.submariner.io
  names:
    kind: MultiClusterService
    listKind: MultiClusterServiceList
    plural: multiclusterservices
    singular: multiclusterservice
  preserveUnknownFields: true
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              clusterServiceInfo:
                properties:
                  clusterDomain:
                    minimum: 0
                    type: string
                  clusterID:
                    minimum: 1
                    type: string
                  port:
                    minimum: 0
                    type: integer
                  serviceIP:
                    minimum: 1
                    type: string
    served: true
    storage: true
status:
  acceptedNames:
    kind: MultiClusterService
    listKind: MultiClusterServiceList
    plural: multiclusterservices
    singular: multiclusterservice
  conditions:
  - lastTransitionTime: "2020-09-15T14:48:42Z"
    message: '[spec.versions[0].schema.openAPIV3Schema.properties[spec].properties[clusterServiceInfo].type:
      Required value: must not be empty for specified object fields, spec.versions[0].schema.openAPIV3Schema.properties[spec].type:
      Required value: must not be empty for specified object fields, spec.versions[0].schema.openAPIV3Schema.type:
      Required value: must not be empty at the root]'
    reason: Violations
    status: "True"
    type: NonStructuralSchema
  - lastTransitionTime: "2020-09-15T14:48:42Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2020-09-15T14:48:42Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
